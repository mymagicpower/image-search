<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>aias</artifactId>
        <groupId>me.calvin</groupId>
        <version>1.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>aiplatform-search</artifactId>
    <name>核心模块</name>

    <properties>
        <djl.version>0.22.1</djl.version>
        <jjwt.version>0.11.1</jjwt.version>
        <!-- oshi监控需要指定jna版本, 问题详见 https://github.com/oshi/oshi/issues/1040 -->
        <jna.version>5.13.0</jna.version>
    </properties>

    <dependencies>
        <!-- 代码生成模块 -->
        <dependency>
            <groupId>me.calvin</groupId>
            <artifactId>aiplatform-generator</artifactId>
            <version>1.0</version>
            <exclusions>
                <exclusion>
                    <groupId>me.calvin</groupId>
                    <artifactId>aiplatform-common</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- tools 模块包含了 common 和 logging 模块 -->
        <dependency>
            <groupId>me.calvin</groupId>
            <artifactId>aiplatform-tools</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- Spring boot websocket -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>

        <!-- jwt -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>${jjwt.version}</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>${jjwt.version}</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>${jjwt.version}</version>
        </dependency>

        <!-- quartz -->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
        </dependency>

        <!-- linux的管理 -->
		<dependency>
			<groupId>ch.ethz.ganymed</groupId>
			<artifactId>ganymed-ssh2</artifactId>
			<version>build210</version>
		</dependency>
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>0.1.55</version>
		</dependency>

        <!-- 获取系统信息 -->
        <dependency>
            <groupId>com.github.oshi</groupId>
            <artifactId>oshi-core</artifactId>
            <version>5.7.1</version>
        </dependency>

        <!-- 向量引擎 -->
        <dependency>
            <groupId>io.milvus</groupId>
            <artifactId>milvus-sdk-java</artifactId>
            <version>2.0.0</version>
        </dependency>
        
        <!-- 服务器端推理引擎 -->
        <dependency>
            <groupId>ai.djl</groupId>
            <artifactId>api</artifactId>
            <version>${djl.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.djl</groupId>
            <artifactId>basicdataset</artifactId>
            <version>${djl.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.djl</groupId>
            <artifactId>model-zoo</artifactId>
            <version>${djl.version}</version>
        </dependency>

        <!-- Pytorch -->
        <dependency>
            <groupId>ai.djl.pytorch</groupId>
            <artifactId>pytorch-engine</artifactId>
            <version>${djl.version}</version>
        </dependency>
        <dependency>
            <groupId>ai.djl.pytorch</groupId>
            <artifactId>pytorch-model-zoo</artifactId>
            <version>${djl.version}</version>
        </dependency>

<!--        &lt;!&ndash; ONNX &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>ai.djl.onnxruntime</groupId>-->
<!--            <artifactId>onnxruntime-engine</artifactId>-->
<!--            <version>${djl.version}</version>-->
<!--        </dependency>-->

        <!--        <dependency>-->
        <!--            <groupId>ai.djl.onnxruntime</groupId>-->
        <!--            <artifactId>onnxruntime-engine</artifactId>-->
        <!--            <version>0.22.1</version>-->
        <!--            <scope>runtime</scope>-->
        <!--            <exclusions>-->
        <!--                <exclusion>-->
        <!--                    <groupId>com.microsoft.onnxruntime</groupId>-->
        <!--                    <artifactId>onnxruntime</artifactId>-->
        <!--                </exclusion>-->
        <!--            </exclusions>-->
        <!--        </dependency>-->
        <!--        <dependency>-->
        <!--            <groupId>com.microsoft.onnxruntime</groupId>-->
        <!--            <artifactId>onnxruntime_gpu</artifactId>-->
        <!--            <version>1.14.0</version>-->
        <!--            <scope>runtime</scope>-->
        <!--        </dependency>-->

        <dependency>
            <groupId>ai.djl.opencv</groupId>
            <artifactId>opencv</artifactId>
            <version>${djl.version}</version>
        </dependency>
        <!-- 向量引擎 -->
        <dependency>
            <groupId>io.milvus</groupId>
            <artifactId>milvus-sdk-java</artifactId>
            <version>2.2.2</version>
        </dependency>
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>${jna.version}</version> <!-- overrides default spring boot version to comply with DJL -->
        </dependency>

        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>3.4.4</version>
        </dependency>

        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <version>5.6.0</version>      <!-- overrides default spring boot version to comply with DJL -->
        </dependency>
        <!-- zip解压缩 -->
        <dependency>
            <groupId>org.apache.ant</groupId>
            <artifactId>ant</artifactId>
            <version>1.9.4</version>
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>1.4</version>
        </dependency>
        <dependency>
            <groupId>eu.bitwalker</groupId>
            <artifactId>UserAgentUtils</artifactId>
            <version>1.21</version>
        </dependency>
    </dependencies>

    <!-- 打包 -->
    <build>
        <plugins>
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-compiler-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <source>8</source>-->
<!--                    <target>8</target>-->
<!--                </configuration>-->
<!--                <version>3.8.1</version>-->
<!--            </plugin>-->

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
<!--            &lt;!&ndash; Allatori plugin start &ndash;&gt;-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-resources-plugin</artifactId>-->
<!--                <version>2.6</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>copy-and-filter-allatori-config</id>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>copy-resources</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <outputDirectory>${basedir}/target</outputDirectory>-->
<!--                            <resources>-->
<!--                                <resource>-->
<!--                                    <directory>${basedir}/allatori</directory>-->
<!--                                    <includes>-->
<!--                                        <include>allatori.xml</include>-->
<!--                                    </includes>-->
<!--                                    <filtering>true</filtering>-->
<!--                                </resource>-->
<!--                            </resources>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.codehaus.mojo</groupId>-->
<!--                <artifactId>exec-maven-plugin</artifactId>-->
<!--                <version>1.2.1</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>run-allatori</id>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>exec</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <configuration>-->
<!--                    <executable>java</executable>-->
<!--                    <arguments>-->
<!--                        <argument>-Xms128m</argument>-->
<!--                        <argument>-Xmx512m</argument>-->
<!--                        <argument>-jar</argument>-->
<!--                        <argument>${basedir}/lib/allatori.jar</argument>-->
<!--                        <argument>${basedir}/lib/config.xml</argument>-->
<!--                    </arguments>-->
<!--                </configuration>-->
<!--            </plugin>-->
<!--            &lt;!&ndash; Allatori plugin end &ndash;&gt;-->
        </plugins>
    </build>
</project>
